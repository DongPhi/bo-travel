{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = userState(false);\n  const [isAdmin, setIsAdmin] = userState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n}\n\n_s(UserAPI, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/bo-travel/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","userState","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,SAAS,CAAC,KAAD,CAAzC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,SAAS,CAAC,KAAD,CAAvC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAH,EAAS;AACL,YAAMM,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEV;AAAhB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBP,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEH,SARD,CAQE,OAAOQ,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAZD;;AAaAV,MAAAA,OAAO;AACV;AACJ,GAjBQ,EAiBN,CAACN,KAAD,CAjBM,CAAT;AAmBA,SAAM;AACFC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADR;AAEFE,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAFP,GAAN;AAIH;;GA3BQN,O;;KAAAA,O;AA6BT,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = userState(false)\r\n    const [isAdmin, setIsAdmin] = userState(false)\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n    }, [token])\r\n\r\n    return{\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin]\r\n    }\r\n}\r\n\r\nexport default UserAPI\r\n"]},"metadata":{},"sourceType":"module"}